'''
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

'''

def recur_fibonacci(n):
    if n in [0, 1]:
        return n
    else:
        return recur_fibonacci(n-1) + recur_fibonacci(n-2)


def sum_fibonacci():
    sum = 0
    for i in range(2, 999):
        current_i = recur_fibonacci(i)
        if current_i % 2 == 0 and current_i < 4*(10**6):
            sum += current_i
            #print(i-1, current_i, sum)
        if current_i >= 4*(10**6):
            return sum


print(sum_fibonacci())
